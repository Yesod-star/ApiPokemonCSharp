using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ApiPokemonCSharp.Migrations
{
    /// <inheritdoc />
    public partial class InitialDb : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Items",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Price = table.Column<int>(type: "int", nullable: false),
                    AttributeBuff = table.Column<int>(type: "int", nullable: false),
                    IncreaseBuff = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    Deleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedWhen = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Items", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Types",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PokemonType = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    Deleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedWhen = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Types", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Effectiveness",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Multiplier = table.Column<int>(type: "int", nullable: false),
                    PokeTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    Deleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedWhen = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Effectiveness", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Effectiveness_Types_PokeTypeId",
                        column: x => x.PokeTypeId,
                        principalTable: "Types",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Moves",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Damage = table.Column<int>(type: "int", nullable: false),
                    Velocity = table.Column<int>(type: "int", nullable: false),
                    ConditionChance = table.Column<int>(type: "int", nullable: false),
                    GeneratedCondition = table.Column<int>(type: "int", nullable: false),
                    AutoGeneratedConditionChance = table.Column<int>(type: "int", nullable: false),
                    AutoGeneratedCondition = table.Column<int>(type: "int", nullable: false),
                    PercentageBuff = table.Column<int>(type: "int", nullable: false),
                    AttributeBuff = table.Column<int>(type: "int", nullable: false),
                    PokeTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    Deleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedWhen = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Moves", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Moves_Types_PokeTypeId",
                        column: x => x.PokeTypeId,
                        principalTable: "Types",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Pokemons",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    HpPokemon = table.Column<int>(type: "int", nullable: false),
                    AttackPokemon = table.Column<int>(type: "int", nullable: false),
                    DefensePokemon = table.Column<int>(type: "int", nullable: false),
                    SpeedPokemon = table.Column<int>(type: "int", nullable: false),
                    SpecialAttackPokemon = table.Column<int>(type: "int", nullable: false),
                    SpecialDefensePokemon = table.Column<int>(type: "int", nullable: false),
                    PokeItemId = table.Column<int>(type: "int", nullable: false),
                    PokePrimaryTypeId = table.Column<int>(type: "int", nullable: false),
                    PokeSecondaryTypeId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    Deleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedWhen = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Pokemons", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Pokemons_Items_PokeItemId",
                        column: x => x.PokeItemId,
                        principalTable: "Items",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Pokemons_Types_PokePrimaryTypeId",
                        column: x => x.PokePrimaryTypeId,
                        principalTable: "Types",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Pokemons_Types_PokeSecondaryTypeId",
                        column: x => x.PokeSecondaryTypeId,
                        principalTable: "Types",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "Weakness",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Multiplier = table.Column<int>(type: "int", nullable: false),
                    PokeTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    Deleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedWhen = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Weakness", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Weakness_Types_PokeTypeId",
                        column: x => x.PokeTypeId,
                        principalTable: "Types",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PokemonMove",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PokePokemonId = table.Column<int>(type: "int", nullable: false),
                    PokeMoveId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    Deleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedWhen = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PokemonMove", x => x.Id);
                    table.ForeignKey(
                        name: "FK_PokemonMove_Moves_PokeMoveId",
                        column: x => x.PokeMoveId,
                        principalTable: "Moves",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_PokemonMove_Pokemons_PokePokemonId",
                        column: x => x.PokePokemonId,
                        principalTable: "Pokemons",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_Effectiveness_PokeTypeId",
                table: "Effectiveness",
                column: "PokeTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_Moves_PokeTypeId",
                table: "Moves",
                column: "PokeTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_PokemonMove_PokeMoveId",
                table: "PokemonMove",
                column: "PokeMoveId");

            migrationBuilder.CreateIndex(
                name: "IX_PokemonMove_PokePokemonId",
                table: "PokemonMove",
                column: "PokePokemonId");

            migrationBuilder.CreateIndex(
                name: "IX_Pokemons_PokeItemId",
                table: "Pokemons",
                column: "PokeItemId");

            migrationBuilder.CreateIndex(
                name: "IX_Pokemons_PokePrimaryTypeId",
                table: "Pokemons",
                column: "PokePrimaryTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_Pokemons_PokeSecondaryTypeId",
                table: "Pokemons",
                column: "PokeSecondaryTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_Weakness_PokeTypeId",
                table: "Weakness",
                column: "PokeTypeId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Effectiveness");

            migrationBuilder.DropTable(
                name: "PokemonMove");

            migrationBuilder.DropTable(
                name: "Weakness");

            migrationBuilder.DropTable(
                name: "Moves");

            migrationBuilder.DropTable(
                name: "Pokemons");

            migrationBuilder.DropTable(
                name: "Items");

            migrationBuilder.DropTable(
                name: "Types");
        }
    }
}
