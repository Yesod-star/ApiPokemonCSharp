// <auto-generated />
using System;
using ApiPokemonCSharp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPokemonCSharp.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    partial class PokemonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeEffective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeletedWhen")
                        .HasColumnType("datetime2");

                    b.Property<int>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PokeTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PokeTypeId" }, "idx_fk_poke_type_x_poke_effective");

                    b.ToTable("Effectiveness");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeBuff")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeletedWhen")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncreaseBuff")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeBuff")
                        .HasColumnType("int");

                    b.Property<int>("AutoGeneratedCondition")
                        .HasColumnType("int");

                    b.Property<int>("AutoGeneratedConditionChance")
                        .HasColumnType("int");

                    b.Property<int>("ConditionChance")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeletedWhen")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneratedCondition")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PercentageBuff")
                        .HasColumnType("int");

                    b.Property<int>("PokeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Velocity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PokeTypeId" }, "idx_fk_poke_type_x_poke_move");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokePokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttackPokemon")
                        .HasColumnType("int");

                    b.Property<int>("DefensePokemon")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeletedWhen")
                        .HasColumnType("datetime2");

                    b.Property<int>("HpPokemon")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PokeItemId")
                        .HasColumnType("int");

                    b.Property<int>("PokePrimaryTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PokeSecondaryTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialAttackPokemon")
                        .HasColumnType("int");

                    b.Property<int>("SpecialDefensePokemon")
                        .HasColumnType("int");

                    b.Property<int>("SpeedPokemon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PokeItemId" }, "idx_fk_poke_item_x_poke_pokemon");

                    b.HasIndex(new[] { "PokePrimaryTypeId" }, "idx_fk_poke_primary_type_x_poke_pokemon");

                    b.HasIndex(new[] { "PokeSecondaryTypeId" }, "idx_fk_poke_secondary_type_x_poke_pokemon");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokePokemonMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeletedWhen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PokeMoveId")
                        .HasColumnType("int");

                    b.Property<int>("PokePokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PokeMoveId" }, "idx_fk_poke_move_x_poke_pokemon_move");

                    b.HasIndex(new[] { "PokePokemonId" }, "idx_fk_poke_pokemon_x_poke_pokemon_move");

                    b.ToTable("PokemonMove");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeletedWhen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PokemonType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeWeakness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeletedWhen")
                        .HasColumnType("datetime2");

                    b.Property<int>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PokeTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PokeTypeId" }, "idx_fk_poke_type_x_poke_weakness");

                    b.ToTable("Weakness");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeEffective", b =>
                {
                    b.HasOne("ApiPokemonCSharp.Models.PokeType", "PokeType")
                        .WithMany("PokeEffectiveList")
                        .HasForeignKey("PokeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_poke_type_x_poke_effective");

                    b.Navigation("PokeType");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeMove", b =>
                {
                    b.HasOne("ApiPokemonCSharp.Models.PokeType", "PokeType")
                        .WithMany("PokeMoveList")
                        .HasForeignKey("PokeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_poke_type_x_poke_move");

                    b.Navigation("PokeType");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokePokemon", b =>
                {
                    b.HasOne("ApiPokemonCSharp.Models.PokeItem", "PokeItem")
                        .WithMany("PokeList")
                        .HasForeignKey("PokeItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_poke_item_x_poke_pokemon");

                    b.HasOne("ApiPokemonCSharp.Models.PokeType", "PokePrimaryType")
                        .WithMany("PokePrimaryList")
                        .HasForeignKey("PokePrimaryTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_poke_primary_type_x_poke_pokemon");

                    b.HasOne("ApiPokemonCSharp.Models.PokeType", "PokeSecondaryType")
                        .WithMany("PokeSecondaryList")
                        .HasForeignKey("PokeSecondaryTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_poke_secondary_type_x_poke_pokemon");

                    b.Navigation("PokeItem");

                    b.Navigation("PokePrimaryType");

                    b.Navigation("PokeSecondaryType");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokePokemonMove", b =>
                {
                    b.HasOne("ApiPokemonCSharp.Models.PokeMove", "PokeMove")
                        .WithMany("PokePokemonMoveList")
                        .HasForeignKey("PokeMoveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_poke_move_x_poke_pokemon_move");

                    b.HasOne("ApiPokemonCSharp.Models.PokePokemon", "PokePokemon")
                        .WithMany("PokePokemonMoveList")
                        .HasForeignKey("PokePokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_poke_pokemon_x_poke_pokemon_move");

                    b.Navigation("PokeMove");

                    b.Navigation("PokePokemon");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeWeakness", b =>
                {
                    b.HasOne("ApiPokemonCSharp.Models.PokeType", "PokeType")
                        .WithMany("PokeWeaknessList")
                        .HasForeignKey("PokeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_poke_type_x_poke_weakness");

                    b.Navigation("PokeType");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeItem", b =>
                {
                    b.Navigation("PokeList");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeMove", b =>
                {
                    b.Navigation("PokePokemonMoveList");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokePokemon", b =>
                {
                    b.Navigation("PokePokemonMoveList");
                });

            modelBuilder.Entity("ApiPokemonCSharp.Models.PokeType", b =>
                {
                    b.Navigation("PokeEffectiveList");

                    b.Navigation("PokeMoveList");

                    b.Navigation("PokePrimaryList");

                    b.Navigation("PokeSecondaryList");

                    b.Navigation("PokeWeaknessList");
                });
#pragma warning restore 612, 618
        }
    }
}
